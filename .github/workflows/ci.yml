name: CI

on: [push, pull_request]

env:
  BOOST_VERSION: 1.82.0
  BOOST_DIR_VER_NAME: 1_82_0

jobs:
  posix:
    name: "${{ matrix.toolset }} std=c++${{ matrix.cxxstd }} ${{ matrix.build-type }}"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: g++-10
            compiler: g++-10
            install: g++-10
            os: ubuntu-latest
            container: ubuntu:22.04
            build-type: 'Release'
            cxxstd: 17
            cxxflags: ''
            ldflags: ''

          - toolset: g++-12
            compiler: g++-12
            install: g++-12
            os: ubuntu-latest
            container: ubuntu:22.04
            build-type: 'Release'
            cxxstd: 17
            cxxflags: ''
            ldflags: ''

          - toolset: clang++-12
            compiler: clang++-12
            install: clang++-12
            os: ubuntu-latest
            container: ubuntu:22.04
            build-type: 'Release'
            cxxstd: 17
            cxxflags: '-fdeclspec'
            ldflags: ''

          - toolset: clang++-14-libc++-14
            compiler: clang++-14
            install: 'clang++-14 libc++-14-dev libc++abi-14-dev'
            os: ubuntu-latest
            container: ubuntu:22.04
            build-type: 'Release'
            cxxstd: 17
            cxxflags: '-stdlib=libc++'
            ldflags: '-lc++'

          - toolset: clang++-15
            compiler: clang++-15
            install: clang++-15
            os: ubuntu-latest
            container: ubuntu:22.04
            build-type: 'Release'
            cxxstd: 17
            cxxflags: '-fdeclspec'
            ldflags: ''

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    env:
      CXXFLAGS: ${{ matrix.cxxflags }} -Wall -Wextra -std=c++17
      LDFLAGS:  ${{ matrix.ldflags }}
      CMAKE_BUILD_PARALLEL_LEVEL: 4

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup container environment
        if: matrix.container
        run: |
          apt-get update
          apt-get -y install sudo wget tar cmake git openssl libssl-dev pkg-config

      - name: Install compiler
        run: sudo apt-get install -y ${{ matrix.install }}

      - name: Install Boost
        uses: MarkusJx/install-boost@v2.4.4
        id: install-boost
        with:
          boost_version: 1.82.0
          platform_version: 22.04

      - name: Setup library
        run: |
          cmake -S . -B build/${{ matrix.compiler }} -DCMAKE_CXX_COMPILER="${{ matrix.compiler }}"
          sudo cmake --install build/${{ matrix.compiler }}
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - name: Build tests
        run: |
          cmake -S test/unit -B test/unit/build/${{ matrix.compiler }} \
          -DCMAKE_CXX_COMPILER="${{ matrix.compiler }}" -DCMAKE_CXX_FLAGS="${{ env.CXXFLAGS }}" \
          -DCMAKE_EXE_LINKER_FLAGS="${{ env.LDFLAGS }}" -DCMAKE_BUILD_TYPE="${{ matrix.build-type }}"
          cmake --build test/unit/build/${{ matrix.compiler }}
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

      - name: Run tests
        run: ./test/unit/build/${{ matrix.compiler }}/mqtt-test --log_level=test_suite
