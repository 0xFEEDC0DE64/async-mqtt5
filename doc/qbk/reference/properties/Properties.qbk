[/
    Copyright (c) 2023 Mireo
   
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
]


[section:async_mqtt5__Properties Properties]

The last field in the Variable header of packets CONNECT, CONNACK, PUBLISH, PUBACK, PUBREC,PUBREL, PUBCOMP, SUBSCRIBE, SUBACK, UNSUBSCRIBE, UNSUBACK, DISCONNECT, and AUTH 
is a set of Properties. A set contains a Property Length followed by the Properties. A Property consists of an Identifier and a value.

This section lists all possible Properties and describes their usage:

[table:connect_props CONNECT properties
	[[Identifier] [Value type] [Description]]
	[[session_expiry_interval] [`int32_t`] [Represents the Session Expiry Internal in seconds.]]
	[[receive_maximum] [`int16_t`] [The maximum number of QoS 1 and QoS 2 publications that the Client is willing to process concurrently.]]
	[[maximum_packet_size] [`int32_t`] [The maximum __PACKET_SIZE__ in bytes that the Client is willing to process.]]
	[[topic_alias_maximum] [`uint16_t`] [The highest value that the Client will accept as a Topic Alias sent by the Server.]]
	[[request_response_information] [`uint8_t`] [The value of 0 signals that the Server MUST NOT return Response Information in CONNACK. If the value if 1, it MAY return it.]]
	[[request_problem_information] [`uint8_t`] [The value of 0 signals that the Server MAY return a Reason String or User Properties on a CONNACK or DISCONNECT packet, 
		but MUST NOT send them on any packet other than PUBLISH, CONNACK, or DISCONNECT. If the value is 1, the Server MAY return a Reason String or User Properties where it is allowed.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		The meaning of these properties is not defined by the specification.]]
	[[authentication_method] [`std::string`] [A UTF-8 Encoded String containing the name of the authentication method used for extended authentication.]]
	[[authentication_data] [`std::string`] [Binary Data containing authentication data. The contents of the data are defined by the authentication method.]]
]

[table:will_props Will properties
	[[Identifier] [Value type] [Description]]
	[[will_delay_interval] [`int32_t`] [The delay in seconds that need to pass before Server publishes the Client's Will Message.]]
	[[payload_format_indicator] [`uint8_t`] [Value of 0 indicates that the Will Message is in unspecified bytes. Value of 1 indicates that the Will Message is UTF-8 Encoded Character Data.]]
	[[message_expiry_interval] [`int32_t`] [The lifetime of the Will Message in seconds. It is send as Publication Expiry Interval when it is published.]]
	[[content_type] [`std::string`] [A UTF-8 Encoded String describing the content of the Will Message.]]
	[[response_topic] [`std::string`] [A UTF-8 Encoded String which is used as the Topic Name for a response message.]]
	[[correlation_data] [`std::string`] [Binary Data used by the sender of the Request Message to identify which request the Response Message is for when it is received.]]
	[[correlation_data] [`std::string`] [Binary Data used by the sender of the Request Message to identify which request the Response Message is for when it is received.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		The meaning of these properties is not defined by the specification.]]
]

[table:connack_props CONNACK properties
	[[Identifier] [Value type] [Description]]
	[[session_expiry_interval] [`int32_t`] [Represents the Session Expiry Internal in seconds.]]
	[[receive_maximum] [`int16_t`] [The maximum number of QoS 1 and QoS 2 publications that the Server is willing to process concurrently.]]
	[[maximum_qos] [`uint8_t`] [The highest QoS the Server supports.]]
	[[retain_available] [`uint8_t`] [A value of 0 means that retained message are not supported. A value of 1 means they are supported.]]
	[[maximum_packet_size] [`int32_t`] [The maximum __PACKET_SIZE__ in bytes that the Server is willing to accept.]]
	[[assigned_client_identifier] [`std::string`] [The Client Identifier which was assigned by the Server because a zero length Client Identifier was found in the CONNECT packet]]
	[[topic_alias_maximum] [`uint16_t`] [The highest value that the Server will accept as a Topic Alias sent by the Client.]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[correlation_data] [`std::string`] [Binary Data used by the sender of the Request Message to identify which request the Response Message is for when it is received.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		The meaning of these properties is not defined by the specification.]]
	[[server_keep_alive] [`int16_t`] [The Keep Alive time assigned by the Server.]]
	[[response_information] [`std::string`] [A UTF-8 Encoded String which is used as the basis for creating a Response Topic.]]
	[[server_reference] [`std::string`] [A UTF-8 Encoded String which can be used by the Client to identfy another Server to use.]]
	[[authentication_method] [`std::string`] [A UTF-8 Encoded String containing the name of the authentication method used for extended authentication.]]
	[[authentication_data] [`std::string`] [Binary Data containing authentication data. The contents of the data are defined by the authentication method.]]
]

[table:publish_props PUBLISH properties
	[[Identifier] [Value type] [Description]]
	[[payload_format_indicator] [`uint8_t`] [Value of 0 indicates that the Payload is in unspecified bytes. Value of 1 indicates that the Payload is UTF-8 Encoded Character Data.]]
	[[message_expiry_interval] [`int32_t`] [The lifetime of the Application Message in seconds.]]
	[[topic_alias] [`int16_t`] [Two Byte integer representing the Topic Alias, an integer value that is used to identify the Topic instead of using the Topic Name.]]
	[[response_topic] [`std::string`] [A UTF-8 Encoded String which is used as the Topic Name for a response message.]]
	[[correlation_data] [`std::string`] [Binary Data used by the sender of the Request Message to identify which request the Response Message is for when it is received.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		The meaning of these properties is not defined by the specification.]]
	[[subscription_identifier] [`uint32_t`] [Identifier of the Subscription in range of 1 to 268,435,455.]]
	[[content_type] [`std::string`] [A UTF-8 Encoded String describing the content of the Application Message.]]
]

[table:puback_props PUBACK properties
	[[Identifier] [Value type] [Description]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:pubrec_props PUBREC properties
	[[Identifier] [Value type] [Description]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:pubrel_props PUBREL properties
	[[Identifier] [Value type] [Description]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:pubcomp_props PUBCOMP properties
	[[Identifier] [Value type] [Description]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:subscribe_props SUBSCRIBE properties
	[[Identifier] [Value type] [Description]]
	[[subscription_identifier] [`uint32_t`] [Identifier of the Subscription in range of 1 to 268,435,455.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property can be used to send subscription related properties from the Client to the Server. 
		The meaning of these properties is not defined by the specification ]]
]

[table:suback_props SUBACK properties
	[[Identifier] [Value type] [Description]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:unsubscribe_props UNSUBSCRIBE properties
	[[Identifier] [Value type] [Description]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property can be used to send subscription related properties from the Client to the Server. 
		The meaning of these properties is not defined by the specification ]]
]

[table:unsuback_props UNSUBACK properties
	[[Identifier] [Value type] [Description]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:disconnect_props DISCONNECT properties
	[[Identifier] [Value type] [Description]]
	[[session_expiry_interval] [`int32_t`] [Represents the Session Expiry Internal in seconds. Can only be sent by the Client.]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[table:auth_props AUTH properties
	[[Identifier] [Value type] [Description]]
	[[authentication_method] [`std::string`] [A UTF-8 Encoded String containing the name of the authentication method used for extended authentication.]]
	[[authentication_data] [`std::string`] [Binary Data containing authentication data. The contents of the data are defined by the authentication method.]]
	[[reason_string] [`std::string`] [A UTF-8 Encoded String representing the reason associated with this response.]]
	[[user_property] [`std::vector<std::string>`] [A list of name, value pairs (__UTF8_STRING_PAIR__) defining User Properties. 
		This property may be used to provide additional diagnostic or other information. ]]
]

[endsect]