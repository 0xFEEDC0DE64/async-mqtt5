[section:asio_compliance Compliance with Boost.Asio]

Every asynchronous operation in __Asio__ has associated characteristics that specify their behaviour.

* An *allocator* determines how the asynchronous operations allocate memory resources.
* A *cancellation slot* determines how the asynchronous operations support cancellation.
* An *executor* determines the queuing and execution strategy for completion handlers.

This section expands further into the roles of allocators,
cancellation slots, and executors, highlighting their integration and usage within the __Client__.

* See [link async_mqtt5.asio_compliance.per_op_cancellation Per-Operation Cancellation] for more information about how
asynchronous operations within the __Client__ support cancellation.
* See [link async_mqtt5.asio_compliance.executors Executors] for more information about executors.

[include 08_executors.qbk]
[include 09_per_op_cancellation.qbk]

[endsect] [/asio_compliance]
